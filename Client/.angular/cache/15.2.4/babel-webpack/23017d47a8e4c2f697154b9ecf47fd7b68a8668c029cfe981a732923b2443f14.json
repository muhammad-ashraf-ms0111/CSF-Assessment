{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { lastValueFrom } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MovieService {\n  // private API_URI: string = '/api/reviews';\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    //   searchReviews(query: string): Promise<any> {\n    //     const params = new HttpParams().set('query', query);\n    //     const headers = new HttpHeaders().set(\n    //       'Content-Type',\n    //       'application/json; charset=utf-8'\n    //     );\n    //     return lastValueFrom(\n    //       this.httpClient.get<Movies[]>(this.API_URI, {\n    //         params: params,\n    //         headers: headers,\n    //       })\n    //     );\n    //   }\n    // }\n    this.Server_URL = 'http://localhost:8080';\n    this.Reviews_URL = ` ${this.Server_URL}/api/reviews`;\n  }\n  searchReviews(query) {\n    let queryParams = new HttpParams().set('query', encodeURIComponent(query));\n    return lastValueFrom(this.httpClient.get(this.Reviews_URL, {\n      params: queryParams\n    }));\n  }\n}\nMovieService.ɵfac = function MovieService_Factory(t) {\n  return new (t || MovieService)(i0.ɵɵinject(i1.HttpClient));\n};\nMovieService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MovieService,\n  factory: MovieService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAkCA,UAAU,QAAQ,sBAAsB;AAG1E,SAASC,aAAa,QAAQ,MAAM;;;AAKpC,OAAM,MAAOC,YAAY;EACvB;EAEAC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAE9B;IACA;IAEA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,eAAU,GAAG,uBAAuB;IACpC,gBAAW,GAAG,IAAI,IAAI,CAACC,UAAU,cAAc;EAnBF;EAqB7CC,aAAa,CAACC,KAAa;IACzB,IAAIC,WAAW,GAAG,IAAIR,UAAU,EAAE,CAACS,GAAG,CAAC,OAAO,EAAEC,kBAAkB,CAACH,KAAK,CAAC,CAAC;IAC1E,OAAON,aAAa,CAClB,IAAI,CAACG,UAAU,CAACO,GAAG,CAAC,IAAI,CAACC,WAAW,EAAE;MAAEC,MAAM,EAAEL;IAAW,CAAE,CAAC,CAC/D;EACH;;AA7BWN,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAY,SAAZZ,YAAY;EAAAa,YAFX;AAAM","names":["HttpParams","lastValueFrom","MovieService","constructor","httpClient","Server_URL","searchReviews","query","queryParams","set","encodeURIComponent","get","Reviews_URL","params","factory","providedIn"],"sourceRoot":"","sources":["/Users/acap19/CSF-Assessment/Client/src/app/services/movie.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Movies } from '../models/movies';\nimport { lastValueFrom } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MovieService {\n  // private API_URI: string = '/api/reviews';\n\n  constructor(private httpClient: HttpClient) {}\n\n  //   searchReviews(query: string): Promise<any> {\n  //     const params = new HttpParams().set('query', query);\n\n  //     const headers = new HttpHeaders().set(\n  //       'Content-Type',\n  //       'application/json; charset=utf-8'\n  //     );\n\n  //     return lastValueFrom(\n  //       this.httpClient.get<Movies[]>(this.API_URI, {\n  //         params: params,\n  //         headers: headers,\n  //       })\n  //     );\n  //   }\n  // }\n  Server_URL = 'http://localhost:8080';\n  Reviews_URL = ` ${this.Server_URL}/api/reviews`;\n\n  searchReviews(query: string) {\n    let queryParams = new HttpParams().set('query', encodeURIComponent(query));\n    return lastValueFrom(\n      this.httpClient.get(this.Reviews_URL, { params: queryParams })\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}