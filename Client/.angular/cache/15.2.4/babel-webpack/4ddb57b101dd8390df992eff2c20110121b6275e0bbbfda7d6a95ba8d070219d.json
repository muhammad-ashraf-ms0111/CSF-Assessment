{"ast":null,"code":"import { HttpHeaders, HttpParams } from '@angular/common/http';\nimport { lastValueFrom } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MovieService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.API_URI = '/api/reviews';\n  }\n  searchReviews(query, offset, limit) {\n    const params = new HttpParams().set('query', query).set('limit', limit).set('offset', offset);\n    const headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\n    return lastValueFrom(this.httpClient.get(this.API_URI, {\n      params: params,\n      headers: headers\n    }));\n  }\n}\nMovieService.ɵfac = function MovieService_Factory(t) {\n  return new (t || MovieService)(i0.ɵɵinject(i1.HttpClient));\n};\nMovieService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MovieService,\n  factory: MovieService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,WAAW,EAAEC,UAAU,QAAQ,sBAAsB;AAG1E,SAASC,aAAa,QAAQ,MAAM;;;AAKpC,OAAM,MAAOC,YAAY;EAGvBC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAFtB,YAAO,GAAW,cAAc;EAEK;EAE7CC,aAAa,CAACC,KAAa,EAAEC,MAAc,EAAEC,KAAa;IACxD,MAAMC,MAAM,GAAG,IAAIT,UAAU,EAAE,CAC5BU,GAAG,CAAC,OAAO,EAAEJ,KAAK,CAAC,CACnBI,GAAG,CAAC,OAAO,EAAEF,KAAK,CAAC,CACnBE,GAAG,CAAC,QAAQ,EAAEH,MAAM,CAAC;IAExB,MAAMI,OAAO,GAAG,IAAIZ,WAAW,EAAE,CAACW,GAAG,CACnC,cAAc,EACd,iCAAiC,CAClC;IAED,OAAOT,aAAa,CAClB,IAAI,CAACG,UAAU,CAACQ,GAAG,CAAW,IAAI,CAACC,OAAO,EAAE;MAC1CJ,MAAM,EAAEA,MAAM;MACdE,OAAO,EAAEA;KACV,CAAC,CACH;EACH;;AAtBWT,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAY,SAAZZ,YAAY;EAAAa,YAFX;AAAM","names":["HttpHeaders","HttpParams","lastValueFrom","MovieService","constructor","httpClient","searchReviews","query","offset","limit","params","set","headers","get","API_URI","factory","providedIn"],"sourceRoot":"","sources":["/Users/acap19/CSF-Assessment/Client/src/app/services/movie.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Movies } from '../models/movies';\nimport { lastValueFrom } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MovieService {\n  private API_URI: string = '/api/reviews';\n\n  constructor(private httpClient: HttpClient) {}\n\n  searchReviews(query: string, offset: number, limit: number): Promise<any> {\n    const params = new HttpParams()\n      .set('query', query)\n      .set('limit', limit)\n      .set('offset', offset);\n\n    const headers = new HttpHeaders().set(\n      'Content-Type',\n      'application/json; charset=utf-8'\n    );\n\n    return lastValueFrom(\n      this.httpClient.get<Movies[]>(this.API_URI, {\n        params: params,\n        headers: headers,\n      })\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}